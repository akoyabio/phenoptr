% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_cell_seg_data.R
\name{read_cell_seg_data}
\alias{read_cell_seg_data}
\title{Read and clean an inForm data file.}
\usage{
read_cell_seg_data(path = NA,
  pixels_per_micron = getOption("phenoptr.pixels.per.micron"),
  remove_units = TRUE)
}
\arguments{
\item{path}{Path to the file to read, or NA to use a file chooser.}

\item{pixels_per_micron}{Conversion factor to microns
(default 2 pixels/micron, the resolution of 20x MSI fields
taken on Vectra Polaris and Vectra 3.).
Set to NA to skip conversion.}

\item{remove_units}{If TRUE (default),
remove the unit name from expression columns.}
}
\value{
A \code{\link[tibble]{data_frame}}
        containing the cleaned-up data set.
}
\description{
\code{read_cell_seg_data} makes it easier to use data from PerkinElmer's
inForm program. It reads data files written by inForm 2.0 and later and does
useful cleanup on the result. Data files written by inForm 2.0 can be read
easily using \code{\link[utils]{read.delim}} or
\code{\link[readr]{read_tsv}}. However there is still some useful cleanup to
be done.
}
\details{
\code{read_cell_seg_data} reads both single-image tables and merged tables
and does useful cleanup on the data:
\itemize{
\item Removes columns that are all NA
      (these are typically unused summary columns)
\item Converts percent columns to numeric fractions
\item Converts pixel distances to microns. The conversion factor may be
specified as a parameter or by setting
\code{options(phenoptr.pixels.per.micron)}.
\item Optionally removes units from expression names
\item If the file contains multiple sample names,
      a \code{tag} column is created
      containing a minimal, unique tag for each sample.
      This is useful when a
      short name is needed, for example in chart legends.
}
}
\examples{
path <- sample_cell_seg_path()
csd <- read_cell_seg_data(path)

# count all the phenotypes in the data
table(csd$Phenotype)

\dontrun{
# Use purrr::map_df to read all cell seg files in a directory
# and return a single data_frame.
paths <- list_cell_seg_files(path)
csd <- purrr::map_df(paths, read_cell_seg_data)
}
}
\seealso{
Other file readers: \code{\link{list_cell_seg_files}},
  \code{\link{read_components}}, \code{\link{read_maps}}
}
