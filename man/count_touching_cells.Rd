% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_touching_cells.R
\name{count_touching_cells}
\alias{count_touching_cells}
\title{Find and count touching cells for pairs of phenotypes.}
\usage{
count_touching_cells(cell_seg_path, pairs, phenotype_rules = NULL,
  categories = NULL, colors = NULL, mutual = FALSE,
  write_images = !is.null(colors), output_base = NULL)
}
\arguments{
\item{cell_seg_path}{The path to the cell seg data file. The same directory
must also contain \code{_memb_seg_map.tif} or \code{_binary_seg_maps.tif} and, if
\code{write_images} is true, a  TIFF or JPEG composite image.}

\item{pairs}{A list of pairs of phenotypes. Each entry is a two-element
vector. The result will contain one or two lines for each pair showing the
number of cells and number of touches.}

\item{phenotype_rules}{A named list. The item names are the phenotype
names and must include all the names in \code{pairs}.
The values are selectors for \link{select_rows}.
If \code{phenotype_rules} is \code{NULL}, the names in \code{pairs} are used directly as
the phenotypes.}

\item{categories}{If given, a vector or list of tissue category names.
Categories not in the list will be excluded from the analysis.}

\item{colors}{A named list of phenotype colors to use when drawing
the output. Only used when \code{write_images} is \code{TRUE}.}

\item{mutual}{If \code{TRUE}, returns stats on mutually touching pairs,
rather than separate counts of cells for each phenotype.}

\item{write_images}{If \code{TRUE}, for each pair, write an image showing the
touching pairs. Requires \code{colors} and a composite image in the same
directory as the cell seg table.}

\item{output_base}{Base path for image output.
If \code{NULL}, output will be to the same
directory as the cell table.}
}
\value{
If \strong{\code{mutual} is \code{TRUE}}, returns a \code{data_frame} with one row per
\code{pair}, containing these columns:
\describe{
\item{\code{source}}{Base file name of the source file with
\code{_cell_seg_data.txt} stripped off for brevity.}
\item{\code{phenotype1}}{The first phenotype in the touching pair.}
\item{\code{phenotype2}}{The second phenotype in the touching pair.}
\item{\code{count}}{The number of touching pairs.}
\item{\code{total1}}{The total number of \code{phenotype1} cells
in the image.}
\item{\code{total2}}{The total number of \code{phenotype2} cells
in the image.}
}

If \strong{\code{mutual} is \code{FALSE}}, returns a \code{data_frame} with two rows per \code{pair},
containing these columns:
\describe{
\item{\code{source}}{Base file name of the source file with
\code{_cell_seg_data.txt} stripped off for brevity.}
\item{\code{phenotype}}{The phenotype of cells being counted.}
\item{\code{touching}}{The phenotype of cells being touched.}
\item{\code{count}}{The number of \code{phenotype} cells touching a \code{touching}
cell.}
\item{\code{fraction}}{The fraction of \code{phenotype} cells touching a
\code{touching} cell.}
\item{\code{total}}{The total number of \code{phenotype} cells in the image.}
}
}
\description{
\code{count_touching_cells} uses morphological analysis of nuclear and
membrane segmentation maps to find touching cells of paired phenotypes.
It reports the number of touching cells found and, optionally,
writes image files showing the touching cells.
}
\details{
The image files written show cells of the selected phenotypes on a background
of the composite. Touching cells are filled in the provided color;
cells which are not touching the other phenotype are outlined.
Image files are written as
TIFF files to preserve the fine detail of cell boundaries.

Images are only written when both phenotypes of the pair are represented.
}
\examples{
\dontrun{
base_path = '/path/to/data'
out_path = file.path(base_path, 'touches')
files = list_cell_seg_files(base_path)

# The phenotype pairs to locate. This will find CD8 cells touching
# tumor cells, and, separately, CD8 cells touching CD68 cells.
pairs = list(c("CD8", "Tumor"),
             c("CD8", "CD68"))

# Colors for all the phenotypes mentioned in pairs
colors = list(
  CD8 = 'yellow',
  Tumor = 'cyan',
  CD68 = 'pink'
)

# Count and visualize touching cells
r = purrr::map_df(files, function(path) {
  cat('Processing', path, '\\n')
  count_touching_cells(path, pairs, colors=colors, output_base=output_base)
})

# Save the result
outPath = file.path(output_base, 'TouchCounts.csv')
write.csv(r, outPath, row.names=FALSE)

# The phenotype definitions can be more complex. The default is to use
# the names in `pairs`. Using `phenotype_rules`, the definition can be
# anything allowed by select_rows().

# You can also limit the tissue category, and count mutual touches (pairs)
# instead of individual touching cells.

# For example, find all mutual touches between lymphocytes and tumor cells
# within the tumor:
pairs = list(c('Tumor', 'Lymphocyte'))
colors = list(Tumor='cyan', Lymphocyte='yellow')
phenotype_rules = list(
  Tumor='Tumor',
  Lymphocyte=c('CD4', 'CD8', 'TReg')
)

r = map_df(full_paths, function(path) {
  cat('Processing', path, '\\n')
  count_touching_cells(path, pairs, phenotype_rules,
                       categories='tumor', colors=colors, mutual=TRUE,
                       output_base=output_base)
})

# Then write the results as above.
}
}
